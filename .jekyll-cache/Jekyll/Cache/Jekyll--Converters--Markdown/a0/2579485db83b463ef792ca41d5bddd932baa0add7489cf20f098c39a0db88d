I"3<h2 id="string과-nsstring">String과 NSString</h2>
<ul>
  <li>
    <p>NSString 이란❓<br />
 Object-C에서 String 타입에 해당한다.</p>
  </li>
  <li>
    <p>String을 NSString 으로 캐스팅해서 사용할 수 있고, NSStrin을 String으로 캐스팅해서 사용할 수 있다.</p>
  </li>
</ul>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="k">var</span> <span class="nv">foo</span><span class="p">:</span> <span class="kt">NSString</span> <span class="o">=</span> <span class="s">"this is NSString"</span>
<span class="k">let</span> <span class="nv">fooString</span> <span class="o">=</span> <span class="kt">NSString</span> <span class="k">as</span> <span class="kt">String</span></code></pre></figure>

<ul>
  <li>하지만 String과 NSSTring이 bridge되어 있기 때문에, 일반적으로 String을 사용하는 것이 권장된다.</li>
</ul>

<h3 id="bridging-이란">Bridging 이란?</h3>
<ul>
  <li>
    <p>String 공식문서를 살펴보면, “String과 NSString이 <code class="language-plaintext highlighter-rouge">bridging</code>되어 있다.” 라는 표현이 등장한다.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">Bridging</code> 이란, Swift의 클래스에서 Objective-C의 클래스를 사용할 수 있도록 만들어주는 것을 의미한다.</p>
  </li>
</ul>

<h2 id="swift의-string은-value-타입이다">Swift의 String은 Value 타입이다.</h2>
<ul>
  <li>String이 함수 인자로 사용될 때, 값이 복사되어서 함수 파라미터로 전달된다. 즉, call by value 방식이다.</li>
  <li></li>
</ul>

<h2 id="참고-자료">참고 자료</h2>
<p><a href="https://stackoverflow.com/questions/24038629/swift-which-types-to-use-nsstring-or-string">Which type to use NSString or String</a></p>
:ET